{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","reorderedGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA9CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITX,GACFI,EAAaQ,UAGRR,EAwBgBS,CACrBnB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWhB,IAAaL,EAASe,SAC7B,iBACA,0BACJQ,QA9BmB,WACzBjB,EAAYN,EAASe,WAwBjB,iCAUA,wBACEO,KAAK,SACLD,UAAWhB,IAAaL,EAASiB,OAC7B,oBACA,6BACJM,QApCiB,WACvBjB,EAAYN,EAASiB,SA8BjB,4BAUA,wBACEK,KAAK,SACLD,WAA0B,IAAfd,EACP,oBACA,6BACJgB,QA1Cc,WACpBf,GAAeD,IAoCX,sBAWGF,IAAaL,EAASI,OAAuB,IAAfG,IAE7B,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAjDQ,WAClBjB,EAAYN,EAASI,MACrBI,GAAc,IA4CN,sBAYN,6BACE,6BAEIC,EAAee,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cChItCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a0f21cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleAlphabetSort = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleLengthSort = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={handleAlphabetSort}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={handleLengthSort}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed === true\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed === true)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        <ul>\n          {\n            reorderedGoods.map(good => (\n              <li data-ct=\"Good\" key={good}>\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}